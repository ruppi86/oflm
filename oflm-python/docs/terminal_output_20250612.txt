PS D:\Source\haikumeadowlib\oflm-python\spiramycel> python controlled_comparison.py   
💻 Spiramycel using CPU (consider installing CUDA for GPU acceleration)
🧪 CONTROLLED SPIRAMYCEL COMPARISON EXPERIMENT
======================================================================
🎯 Goal: Separate paradigm effects from stress effects
📊 Design: 2x2 (Ecological/Abstract × Calm/Chaotic)
⏰ Expected duration: 30-60 minutes total

📋 DOCUMENTATION GENERATED:
   🔬 Technical comparative analysis report
   🧘 Philosophical implications analysis
   📊 Executive summary with next steps
   📂 All reports timestamped and preserved

Press Enter to start the experiment (Ctrl+C to abort)...

🚀 PHASE 1: Training all four conditions...

🌱 Training condition A: Ecological + Calm

🌍 ECOLOGICAL TRAINING (CALM)
============================================================
✓ Loaded scenario: Drought-Stressed Eucalyptus Forest - Western Australia
✓ Loaded scenario: Rice Paddy Ecosystem - Guangzhou, China
✓ Loaded scenario: Groundwater Monitoring - Västergötland, Sweden
🌱 Generating 5000 ecological spore echoes...
🧘 Calm mode: LOW stress environment (3% extreme events)
  Generated 100/5000 spore echoes...
  Generated 200/5000 spore echoes...
  Generated 300/5000 spore echoes...
  Generated 400/5000 spore echoes...
  Generated 500/5000 spore echoes...
  Generated 600/5000 spore echoes...
  Generated 700/5000 spore echoes...
  Generated 800/5000 spore echoes...
  Generated 900/5000 spore echoes...
  Generated 1000/5000 spore echoes...
  Generated 1100/5000 spore echoes...
  Generated 1200/5000 spore echoes...
  Generated 1300/5000 spore echoes...
  Generated 1400/5000 spore echoes...
  Generated 1500/5000 spore echoes...
  Generated 1600/5000 spore echoes...
  Generated 1700/5000 spore echoes...
  Generated 1800/5000 spore echoes...
  Generated 1900/5000 spore echoes...
  Generated 2000/5000 spore echoes...
  Generated 2100/5000 spore echoes...
  Generated 2200/5000 spore echoes...
  Generated 2300/5000 spore echoes...
  Generated 2400/5000 spore echoes...
  Generated 2500/5000 spore echoes...
  Generated 2600/5000 spore echoes...
  Generated 2700/5000 spore echoes...
  Generated 2800/5000 spore echoes...
  Generated 2900/5000 spore echoes...
  Generated 3000/5000 spore echoes...
  Generated 3100/5000 spore echoes...
  Generated 3200/5000 spore echoes...
  Generated 3300/5000 spore echoes...
  Generated 3400/5000 spore echoes...
  Generated 3500/5000 spore echoes...
  Generated 3600/5000 spore echoes...
  Generated 3700/5000 spore echoes...
  Generated 3800/5000 spore echoes...
  Generated 3900/5000 spore echoes...
  Generated 4000/5000 spore echoes...
  Generated 4100/5000 spore echoes...
  Generated 4200/5000 spore echoes...
  Generated 4300/5000 spore echoes...
  Generated 4400/5000 spore echoes...
  Generated 4500/5000 spore echoes...
  Generated 4600/5000 spore echoes...
  Generated 4700/5000 spore echoes...
  Generated 4800/5000 spore echoes...
  Generated 4900/5000 spore echoes...
  Generated 5000/5000 spore echoes...
✓ Generated 5000 spore echoes
📁 Saved to: D:\Source\haikumeadowlib\oflm-python\spiramycel\training_scenarios\ecological_controlled_calm.jsonl

📊 Dataset Statistics:
   Total spore echoes: 5000
   Scenario distribution:
     rice_paddy_guangzhou: 1621 (32.4%)
     drought_landscape_australia: 1718 (34.4%)
     groundwater_sweden: 1661 (33.2%)
   Average repair effectiveness: 0.214
   Average environmental stress: 0.181
   Extreme events: 156 (3.1%)
   Ecosystem conditions:
     Thriving/harmony: 3437 (68.7%)
     Minor maintenance: 1386 (27.7%)
     Crisis scenarios: 177 (3.5%)
   Average silence probability: 0.990
   High silence (>0.8): 4975 (99.5%)
🌍 Ecological Spiramycel Training
==================================================
📝 Glyph vocabulary: 64 symbols
🌱 Loading ecological data from D:\Source\haikumeadowlib\oflm-python\spiramycel\training_scenarios\ecological_controlled_calm.jsonl...
✓ Loaded 5000 ecological spore echoes
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Model: femto (25,636 parameters)
🚀 Training for 15 epochs...
Epoch  1: Glyph 2.506 | Effectiveness 0.0141 | Silence 0.4488
Epoch  2: Glyph 2.396 | Effectiveness 0.0063 | Silence 0.3976
Epoch  3: Glyph 2.374 | Effectiveness 0.0061 | Silence 0.3684
Epoch  4: Glyph 2.360 | Effectiveness 0.0057 | Silence 0.3515
Epoch  5: Glyph 2.351 | Effectiveness 0.0056 | Silence 0.3460
Epoch  6: Glyph 2.343 | Effectiveness 0.0054 | Silence 0.3425
Epoch  7: Glyph 2.338 | Effectiveness 0.0053 | Silence 0.3417
Epoch  8: Glyph 2.333 | Effectiveness 0.0052 | Silence 0.3385
Epoch  9: Glyph 2.325 | Effectiveness 0.0050 | Silence 0.3355
Epoch 10: Glyph 2.318 | Effectiveness 0.0048 | Silence 0.3335
Epoch 11: Glyph 2.310 | Effectiveness 0.0048 | Silence 0.3299
Epoch 12: Glyph 2.303 | Effectiveness 0.0048 | Silence 0.3272
Epoch 13: Glyph 2.298 | Effectiveness 0.0048 | Silence 0.3252
Epoch 14: Glyph 2.293 | Effectiveness 0.0046 | Silence 0.3225
Epoch 15: Glyph 2.289 | Effectiveness 0.0046 | Silence 0.3199
⏱ Training completed in 711.7 seconds
💾 Model saved to ecological_spiramycel_20250612_080752.pt
📎 Latest model link: ecological_spiramycel_latest.pt

🌿 Testing ecological inference:
   Drought conditions → Glyphs: [55, 55, 53]
   Predicted effectiveness: 0.735
   Silence probability: 0.575
   Meaning: bamboo stillness → bamboo stillness → meditative glow
💾 Ecological model saved to: ecological_models\ecological_calm_model.pt

🌋 Training condition B: Ecological + Chaotic

🌍 ECOLOGICAL TRAINING (CHAOTIC)
============================================================
✓ Loaded scenario: Drought-Stressed Eucalyptus Forest - Western Australia
✓ Loaded scenario: Rice Paddy Ecosystem - Guangzhou, China
✓ Loaded scenario: Groundwater Monitoring - Västergötland, Sweden
🌱 Generating 5000 ecological spore echoes...
⚡ Chaos mode: HIGH stress environment (15% extreme events)
  Generated 100/5000 spore echoes...
  Generated 200/5000 spore echoes...
  Generated 300/5000 spore echoes...
  Generated 400/5000 spore echoes...
  Generated 500/5000 spore echoes...
  Generated 600/5000 spore echoes...
  Generated 700/5000 spore echoes...
  Generated 800/5000 spore echoes...
  Generated 900/5000 spore echoes...
  Generated 1000/5000 spore echoes...
  Generated 1100/5000 spore echoes...
  Generated 1200/5000 spore echoes...
  Generated 1300/5000 spore echoes...
  Generated 1400/5000 spore echoes...
  Generated 1500/5000 spore echoes...
  Generated 1600/5000 spore echoes...
  Generated 1700/5000 spore echoes...
  Generated 1800/5000 spore echoes...
  Generated 1900/5000 spore echoes...
  Generated 2000/5000 spore echoes...
  Generated 2100/5000 spore echoes...
  Generated 2200/5000 spore echoes...
  Generated 2300/5000 spore echoes...
  Generated 2400/5000 spore echoes...
  Generated 2500/5000 spore echoes...
  Generated 2600/5000 spore echoes...
  Generated 2700/5000 spore echoes...
  Generated 2800/5000 spore echoes...
  Generated 2900/5000 spore echoes...
  Generated 3000/5000 spore echoes...
  Generated 3100/5000 spore echoes...
  Generated 3200/5000 spore echoes...
  Generated 3300/5000 spore echoes...
  Generated 3400/5000 spore echoes...
  Generated 3500/5000 spore echoes...
  Generated 3600/5000 spore echoes...
  Generated 3700/5000 spore echoes...
  Generated 3800/5000 spore echoes...
  Generated 3900/5000 spore echoes...
  Generated 4000/5000 spore echoes...
  Generated 4100/5000 spore echoes...
  Generated 4200/5000 spore echoes...
  Generated 4300/5000 spore echoes...
  Generated 4400/5000 spore echoes...
  Generated 4500/5000 spore echoes...
  Generated 4600/5000 spore echoes...
  Generated 4700/5000 spore echoes...
  Generated 4800/5000 spore echoes...
  Generated 4900/5000 spore echoes...
  Generated 5000/5000 spore echoes...
✓ Generated 5000 spore echoes
📁 Saved to: D:\Source\haikumeadowlib\oflm-python\spiramycel\training_scenarios\ecological_controlled_chaotic.jsonl

📊 Dataset Statistics:
   Total spore echoes: 5000
   Scenario distribution:
     drought_landscape_australia: 1695 (33.9%)
     groundwater_sweden: 1669 (33.4%)
     rice_paddy_guangzhou: 1636 (32.7%)
   Average repair effectiveness: 0.815
   Average environmental stress: 0.328
   Extreme events: 739 (14.8%)
   Average silence probability: 0.777
   High silence (>0.8): 2093 (41.9%)
🌍 Ecological Spiramycel Training
==================================================
📝 Glyph vocabulary: 64 symbols
🌱 Loading ecological data from D:\Source\haikumeadowlib\oflm-python\spiramycel\training_scenarios\ecological_controlled_chaotic.jsonl...
✓ Loaded 5000 ecological spore echoes
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Model: femto (25,636 parameters)
🚀 Training for 15 epochs...
Epoch  1: Glyph 1.039 | Effectiveness 0.0133 | Silence 0.0587
Epoch  2: Glyph 0.538 | Effectiveness 0.0037 | Silence 0.0036
Epoch  3: Glyph 0.468 | Effectiveness 0.0034 | Silence 0.0017
Epoch  4: Glyph 0.450 | Effectiveness 0.0033 | Silence 0.0009
Epoch  5: Glyph 0.441 | Effectiveness 0.0033 | Silence 0.0005
Epoch  6: Glyph 0.436 | Effectiveness 0.0032 | Silence 0.0004
Epoch  7: Glyph 0.431 | Effectiveness 0.0032 | Silence 0.0002
Epoch  8: Glyph 0.425 | Effectiveness 0.0033 | Silence 0.0002
Epoch  9: Glyph 0.421 | Effectiveness 0.0032 | Silence 0.0001
Epoch 10: Glyph 0.419 | Effectiveness 0.0032 | Silence 0.0001
Epoch 11: Glyph 0.415 | Effectiveness 0.0031 | Silence 0.0001
Epoch 12: Glyph 0.414 | Effectiveness 0.0031 | Silence 0.0000
Epoch 13: Glyph 0.412 | Effectiveness 0.0032 | Silence 0.0000
Epoch 14: Glyph 0.411 | Effectiveness 0.0031 | Silence 0.0000
Epoch 15: Glyph 0.408 | Effectiveness 0.0031 | Silence 0.0000
⏱ Training completed in 719.1 seconds
💾 Model saved to ecological_spiramycel_20250612_081955.pt
📎 Latest model link: ecological_spiramycel_latest.pt

🌿 Testing ecological inference:
   Drought conditions → Glyphs: [4, 2, 4]
   Predicted effectiveness: 1.002
   Silence probability: 0.000
   Meaning: sleep 2 seconds → reroute north-east neighbor → sleep 2 seconds
💾 Ecological model saved to: ecological_models\ecological_chaotic_model.pt

🧘 Training condition C: Abstract + Calm

✨ ABSTRACT TRAINING (CALM)
============================================================
🔬 Generating 5000 abstract spore echoes...
🧘 Calm mode: LOW stress environment (more optimal conditions)
  Generated 500/5000 abstract spore echoes...
  Generated 1000/5000 abstract spore echoes...
  Generated 1500/5000 abstract spore echoes...
  Generated 2000/5000 abstract spore echoes...
  Generated 2500/5000 abstract spore echoes...
  Generated 3000/5000 abstract spore echoes...
  Generated 3500/5000 abstract spore echoes...
  Generated 4000/5000 abstract spore echoes...
  Generated 4500/5000 abstract spore echoes...
  Generated 5000/5000 abstract spore echoes...
✓ Generated 5000 abstract spore echoes
📁 Saved to: training_scenarios\abstract_controlled_calm.jsonl

📊 Abstract Dataset Statistics:
   Total spore echoes: 5000
   Scenario distribution:
     urban_fiber: 1616 (32.3%)
     satellite_remote: 1670 (33.4%)
     industrial_iot: 1714 (34.3%)
   Average repair effectiveness: 0.388
   Average environmental stress: 0.219
   Optimal conditions: 2927 (58.5%)
   Problem scenarios: 2073 (41.5%)
   Average silence probability: 0.965
   High silence (>0.8): 4870 (97.4%)
🔬 Abstract Spiramycel Training
==================================================
📝 Glyph vocabulary: 64 symbols
🔬 Loading abstract data from training_scenarios\abstract_controlled_calm.jsonl...    
✓ Loaded 5000 abstract spore echoes
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Model: femto (25,636 parameters)
🚀 Training for 15 epochs...
Epoch  1: Glyph 3.063 | Effectiveness 0.0414 | Silence 0.6553
Epoch  2: Glyph 2.945 | Effectiveness 0.0218 | Silence 0.4293
Epoch  3: Glyph 2.910 | Effectiveness 0.0164 | Silence 0.3439
Epoch  4: Glyph 2.900 | Effectiveness 0.0151 | Silence 0.3308
Epoch  5: Glyph 2.886 | Effectiveness 0.0122 | Silence 0.3131
Epoch  6: Glyph 2.869 | Effectiveness 0.0116 | Silence 0.2978
Epoch  7: Glyph 2.870 | Effectiveness 0.0119 | Silence 0.3023
Epoch  8: Glyph 2.855 | Effectiveness 0.0114 | Silence 0.2950
Epoch  9: Glyph 2.845 | Effectiveness 0.0109 | Silence 0.2866
Epoch 10: Glyph 2.884 | Effectiveness 0.0144 | Silence 0.3465
Epoch 11: Glyph 2.847 | Effectiveness 0.0116 | Silence 0.3035
Epoch 12: Glyph 2.831 | Effectiveness 0.0108 | Silence 0.2909
Epoch 13: Glyph 2.822 | Effectiveness 0.0106 | Silence 0.2895
Epoch 14: Glyph 2.811 | Effectiveness 0.0104 | Silence 0.2835
Epoch 15: Glyph 2.805 | Effectiveness 0.0107 | Silence 0.2810
⏱ Training completed in 719.5 seconds
💾 Model saved to abstract_spiramycel_20250612_083156.pt
📎 Latest model link: abstract_spiramycel_latest.pt

🔬 Testing abstract inference:
   Step 0: None (0x32)
   Step 1: None (0x3E)
   Step 2: None (0x05)
   Step 3: None (0x33)
   Step 4: None (0x34)
   Step 5: None (0x33)
   Step 6: None (0x3A)
   Step 7: None (0x3B)
   Step 8: None (0x3B)
   Step 9: None (0x39)
💾 Abstract model saved to: abstract_models\abstract_calm_model.pt

⚡ Training condition D: Abstract + Chaotic

✨ ABSTRACT TRAINING (CHAOTIC)
============================================================
🔬 Generating 5000 abstract spore echoes...
⚡ Chaos mode: HIGH stress environment (more problems)
  Generated 500/5000 abstract spore echoes...
  Generated 1000/5000 abstract spore echoes...
  Generated 1500/5000 abstract spore echoes...
  Generated 2000/5000 abstract spore echoes...
  Generated 2500/5000 abstract spore echoes...
  Generated 3000/5000 abstract spore echoes...
  Generated 3500/5000 abstract spore echoes...
  Generated 4000/5000 abstract spore echoes...
  Generated 4500/5000 abstract spore echoes...
  Generated 5000/5000 abstract spore echoes...
✓ Generated 5000 abstract spore echoes
📁 Saved to: training_scenarios\abstract_controlled_chaotic.jsonl

📊 Abstract Dataset Statistics:
   Total spore echoes: 5000
   Scenario distribution:
     urban_fiber: 1623 (32.5%)
     satellite_remote: 1745 (34.9%)
     industrial_iot: 1632 (32.6%)
   Average repair effectiveness: 0.505
   Average environmental stress: 0.479
   Optimal conditions: 1525 (30.5%)
   Problem scenarios: 3475 (69.5%)
   Average silence probability: 0.776
   High silence (>0.8): 1875 (37.5%)
🔬 Abstract Spiramycel Training
==================================================
📝 Glyph vocabulary: 64 symbols
🔬 Loading abstract data from training_scenarios\abstract_controlled_chaotic.jsonl... 
✓ Loaded 5000 abstract spore echoes
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Model: femto (25,636 parameters)
🚀 Training for 15 epochs...
Epoch  1: Glyph 3.155 | Effectiveness 0.0359 | Silence 0.4650
Epoch  2: Glyph 3.037 | Effectiveness 0.0185 | Silence 0.2514
Epoch  3: Glyph 3.006 | Effectiveness 0.0153 | Silence 0.2174
Epoch  4: Glyph 2.978 | Effectiveness 0.0139 | Silence 0.2050
Epoch  5: Glyph 2.947 | Effectiveness 0.0141 | Silence 0.1955
Epoch  6: Glyph 2.924 | Effectiveness 0.0131 | Silence 0.1885
Epoch  7: Glyph 2.909 | Effectiveness 0.0130 | Silence 0.1897
Epoch  8: Glyph 2.885 | Effectiveness 0.0118 | Silence 0.1811
Epoch  9: Glyph 2.866 | Effectiveness 0.0116 | Silence 0.1791
Epoch 10: Glyph 2.850 | Effectiveness 0.0115 | Silence 0.1728
Epoch 11: Glyph 2.840 | Effectiveness 0.0115 | Silence 0.1701
Epoch 12: Glyph 2.836 | Effectiveness 0.0116 | Silence 0.1728
Epoch 13: Glyph 2.824 | Effectiveness 0.0112 | Silence 0.1687
Epoch 14: Glyph 2.818 | Effectiveness 0.0113 | Silence 0.1677
Epoch 15: Glyph 2.813 | Effectiveness 0.0112 | Silence 0.1656
⏱ Training completed in 630.6 seconds
💾 Model saved to abstract_spiramycel_20250612_084229.pt
📎 Latest model link: abstract_spiramycel_latest.pt

🔬 Testing abstract inference:
   Step 0: None (0x34)
   Step 1: None (0x32)
   Step 2: None (0x24)
   Step 3: None (0x31)
   Step 4: None (0x37)
   Step 5: None (0x36)
   Step 6: None (0x33)
💾 Abstract model saved to: abstract_models\abstract_chaotic_model.pt

✅ All training complete in 46.5 minutes!

🔬 PHASE 2: Comprehensive Analysis
This will analyze:
   • Glyph usage patterns and contemplative ratios
   • Behavioral profiles under different stress conditions
   • Philosophical implications of paradigm differences
   • Epistemological analysis of learning approaches
   • Interaction effects between paradigm and environment

🔬 RUNNING COMPREHENSIVE COMPARATIVE ANALYSIS
============================================================
✅ All analysis components loaded successfully!

📊 Analyzing ecological_calm model: ecological_models\ecological_calm_model.pt        
📊 Analyzing ecological_calm performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
D:\Source\haikumeadowlib\oflm-python\spiramycel\comparative_analysis.py:93: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location='cpu'))
🔍 Analyzing glyph patterns for ecological_calm...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
D:\Source\haikumeadowlib\oflm-python\spiramycel\comparative_analysis.py:132: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location='cpu'))
🧠 Generating behavioral profile for ecological_calm...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
D:\Source\haikumeadowlib\oflm-python\spiramycel\comparative_analysis.py:191: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location='cpu'))
   ✅ Analysis complete for ecological_calm

📊 Analyzing ecological_chaotic model: ecological_models\ecological_chaotic_model.pt  
📊 Analyzing ecological_chaotic performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🔍 Analyzing glyph patterns for ecological_chaotic...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Generating behavioral profile for ecological_chaotic...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
   ✅ Analysis complete for ecological_chaotic

📊 Analyzing abstract_calm model: abstract_models\abstract_calm_model.pt
📊 Analyzing abstract_calm performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🔍 Analyzing glyph patterns for abstract_calm...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Generating behavioral profile for abstract_calm...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
   ✅ Analysis complete for abstract_calm

📊 Analyzing abstract_chaotic model: abstract_models\abstract_chaotic_model.pt        
📊 Analyzing abstract_chaotic performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🔍 Analyzing glyph patterns for abstract_chaotic...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Generating behavioral profile for abstract_chaotic...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
   ✅ Analysis complete for abstract_chaotic

📋 GENERATING COMPREHENSIVE REPORTS
========================================
📊 Generating comparative analysis report...
📋 Generating Full Comparative Analysis Report...
📊 Analyzing Ecological performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🔍 Analyzing glyph patterns for Ecological...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Generating behavioral profile for Ecological...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
📊 Analyzing Abstract performance...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🔍 Analyzing glyph patterns for Abstract...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
🧠 Generating behavioral profile for Abstract...
🦠 Using Spiramycel femto-model (CPU optimized, ~50k parameters)
   📁 Saved to: controlled_comparison_analysis_20250612_084232.txt
🧘 Generating philosophical framework analysis...
🧘 Conducting philosophical analysis of training paradigms...
📚 Conducting epistemological analysis...
🧘 Generating contemplative philosophical report...
   📁 Saved to: controlled_comparison_philosophy_20250612_084232.txt
📋 Generating executive summary...
   📁 Saved to: controlled_comparison_summary_20250612_084232.txt

🎉 COMPREHENSIVE ANALYSIS COMPLETE!
📂 Three detailed reports generated with timestamp 20250612_084232

📋 EXPERIMENTAL RESULTS SUMMARY
============================================================

📊 2×2 DESIGN RESULTS:
┌─────────────┬──────────────┬──────────────┐
│             │   CALM       │   CHAOTIC    │
├─────────────┼──────────────┼──────────────┤
│ ECOLOGICAL  │   ✅ (A)     │   ✅ (B)     │
│ ABSTRACT    │   ✅ (C)     │   ✅ (D)     │
└─────────────┴──────────────┴──────────────┘

🎯 ANALYSIS IMPLICATIONS:
   • A vs C: Paradigm effect under calm conditions
   • B vs D: Paradigm effect under chaotic conditions
   • A vs B: Stress effect for ecological paradigm
   • C vs D: Stress effect for abstract paradigm

📁 Models saved for detailed analysis:
   ecological_calm: ecological_models\ecological_calm_model.pt
   ecological_chaotic: ecological_models\ecological_chaotic_model.pt
   abstract_calm: abstract_models\abstract_calm_model.pt
   abstract_chaotic: abstract_models\abstract_chaotic_model.pt

📂 Model Organization:
   📁 ecological_models/
      └── ecological_calm_model.pt (106KB)
      └── ecological_chaotic_model.pt (106KB)
   📁 abstract_models/
      └── abstract_calm_model.pt (106KB)
      └── abstract_chaotic_model.pt (106KB)

🎉 Experiment complete in 46.6 minutes!
🔬 Ready for detailed contemplative analysis!
🌱 All four organic femto language models preserved!
📋 Check the comprehensive analysis reports for deep insights!
PS D:\Source\haikumeadowlib\oflm-python\spiramycel> 